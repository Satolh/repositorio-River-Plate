import React, { useState,useEffect } from 'react'
import HeaderRiver from './HeaderRiver'
import FooterRiver from './FooterRiver'
import Camiseta from './logocamiseta'

const formaciones = {
  lineup442: [
    [false, true, false, true, false],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, false, true, false],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, false, true, false],
    [false, false, true, false, false],
  ],
   lineup433Attack: [
    [true, false, true, false, true],
    [false, false, false, false, false],
    [false, false, true, false, false],
    [true, false, false, false, true],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, false, true, false],
    [false, false, true, false, false],
  ],
   lineup433Defensive: [
    [true, false, true, false, true],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [true, false, true, false, true],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, false, true, false],
    [false, false, true, false, false],
  ],
   lineup4213:[
    [true, false, true, false, true],
    [false, false, false, false, false],
    [false, false, true, false, false],
    [false, true, , false, true,false],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, false, true, false],
    [false, false, true, false, false],
  ],
   lineup4411: [
    [false, false, true, false, false],
    [false, false, false, false, false],
    [false, false, true, false, false],
    [true, true, , false, true,true],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, false, true, false],
    [false, false, true, false, false],
  ],
   lineup532Attack: [
    [false, true, false, true,false ],
    [false, false, false, false, false],
    [false, true, false, true, false],
    [false, false, true, false, false],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, true, true, false],
    [false, false, true, false, false],
  ],
   lineup532Normal: [
    [false, true, false, true, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, true, true, true, false],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, true, true, false],
    [false, false, true, false, false],
  ],
   lineup4231: [
    [false, false, true, false, false],
    [true, false, true, false, true],
    [false, false, false, false, false],
    [false, true, false, true,false],
    [false, false, false, false, false],
    [true, false, false, false, true],
    [false, true, false, true, false],
    [false, false, true, false, false],
  ],
};

function Box({ occupied, rowIndex, colIndex, indexx, inputValues, handleChange }) {
  const classBox = occupied ? 'box occupied' : 'box';

  return (
    <div className={classBox}>
      <span className='span-number'>{/* Aquí puedes agregar el número de la camiseta o el nombre del jugador */}</span>
      {occupied && <Camiseta />}
      <input
        type='text'
        className='input-titular'
        value={inputValues[indexx] || ''} // Mostrar el valor correspondiente o un string vacío
        onChange={(e) => handleChange(indexx, e)} // Pasar el índice y el evento
      />
    </div>
  );
}


  

  const [lineup,setLineup] = useState([
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
    [false, false, false, false, false],
  ]);
  const[lineupTitular, setLineupTitular] = useState([
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, "1", null, null],
  ]);
  const [titularPlayer, setTitularPlayer] = useState("");
  const [saveNameTitular, setSaveNameTitular] = useState([]);
  
  
  
  const CrearFormacion = () => {
    const [lineup, setLineup] = useState(formaciones.lineup442);
    const [inputValues, setInputValues] = useState(Array(11).fill(''));
  
    const handleChange = (index, e) => {
      const newValues = [...inputValues];
      newValues[index] = e.target.value;
      setInputValues(newValues);
    };
  
    let indexGlobal = 0; // Index global que irá de 0 a 10
  
    return (
      <>
        <HeaderRiver />
        <section className='section'>
          <div className='container-btn'>
                <button className='btn' onClick={()=>setLineup(lineup433Attack)}>4-3-3</button>
                <button className='btn' onClick={()=>setLineup(lineup433Defensive)}>4-3-3</button>
                <button className='btn' onClick={()=>setLineup(lineup4213)}>4-2-1-3</button>
                <button className='btn' onClick={()=>setLineup(lineup4411)}>4-4-1-1</button>
                <button className='btn' onClick={()=>setLineup(lineup532Attack)}>5-3-2</button>
                <button className='btn' onClick={()=>setLineup(lineup532Normal)}>5-3-2</button>
                <button className='btn' onClick={()=>setLineup(lineup4231)}>4-2-3-1</button>
                <button className='btn' onClick={()=>setLineup(lineup442)}>4-4-2</button>
            </div>
          <div className='field'>
            {lineup.map((fila, filaIndex) => (
              <div key={filaIndex} className='fila'>
                {fila.map((occupied, colIndex) => {
                  const indexx = indexGlobal++;
                  return (
                    <Box
                      key={colIndex}
                      occupied={occupied}
                      rowIndex={filaIndex}
                      colIndex={colIndex}
                      indexx={indexx}
                      inputValues={inputValues}
                      handleChange={handleChange}
                    />
                  );
                })}
              </div>
            ))}
          </div>
          <div className='container-players'>
            {[...Array(11)].map((_, i) => (
              <input key={i} type='text' className='player-suplente' />
            ))}
          </div>
        </section>
        <FooterRiver />
      </>
    );
  }
  
  export default CrearFormacion;